/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface EnhancedImageSettingsButton {
    /**
    * Invert the colors.
    */
    'invertColors': any;
    /**
    * Set the value of the sliders.
    */
    'setSliderValue': any;
    /**
    * The source of the image.
    */
    'src': string;
  }
  interface EnhancedImageSettingsButtonAttributes extends StencilHTMLAttributes {
    /**
    * Invert the colors.
    */
    'invertColors'?: any;
    /**
    * Set the value of the sliders.
    */
    'setSliderValue'?: any;
    /**
    * The source of the image.
    */
    'src'?: string;
  }

  interface EnhancedImage {
    /**
    * The position of the settings button
    */
    'settingsPosition': string;
    /**
    * The source of the image
    */
    'src': string;
  }
  interface EnhancedImageAttributes extends StencilHTMLAttributes {
    /**
    * The position of the settings button
    */
    'settingsPosition'?: string;
    /**
    * The source of the image
    */
    'src'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'EnhancedImageSettingsButton': Components.EnhancedImageSettingsButton;
    'EnhancedImage': Components.EnhancedImage;
  }

  interface StencilIntrinsicElements {
    'enhanced-image-settings-button': Components.EnhancedImageSettingsButtonAttributes;
    'enhanced-image': Components.EnhancedImageAttributes;
  }


  interface HTMLEnhancedImageSettingsButtonElement extends Components.EnhancedImageSettingsButton, HTMLStencilElement {}
  var HTMLEnhancedImageSettingsButtonElement: {
    prototype: HTMLEnhancedImageSettingsButtonElement;
    new (): HTMLEnhancedImageSettingsButtonElement;
  };

  interface HTMLEnhancedImageElement extends Components.EnhancedImage, HTMLStencilElement {}
  var HTMLEnhancedImageElement: {
    prototype: HTMLEnhancedImageElement;
    new (): HTMLEnhancedImageElement;
  };

  interface HTMLElementTagNameMap {
    'enhanced-image-settings-button': HTMLEnhancedImageSettingsButtonElement
    'enhanced-image': HTMLEnhancedImageElement
  }

  interface ElementTagNameMap {
    'enhanced-image-settings-button': HTMLEnhancedImageSettingsButtonElement;
    'enhanced-image': HTMLEnhancedImageElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
